name: CI Demo Workflow

# Trigger this workflow whenever code is pushed to main branch
on:
  push:
    branches: [ main ]

# Define the job that will run
jobs:
  build-test:
    runs-on: ubuntu-latest  # GitHub gives you a clean Linux VM

    steps:
      # Step 1: Checkout your code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Build docker image
      - name: Build Docker image
        run: |
          docker build -t myapp:latest .

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # log in to docker hub
      - name: Log in to Docker Hub
        env: 
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login -u  "$DOCKER_USERNAME" --password-stdin

      # tag and push docker image
      - name: Push Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          docker tag myapp:latest $DOCKER_USERNAME/myapp:latest
          docker push $DOCKER_USERNAME/myapp:latest


      # Step 3: Install dependencies (if you have requirements.txt)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      # Step 4: Run tests (this is your “CI”)
      - name: Run tests
        run: |
          echo "Running tests..."
          python -m unittest discover -s tests -p "test_*.py" || echo "No tests found, skipping."
      
      

      # Step 5: Success message
      - name: Done
        run: echo "CI workflow completed successfully!"

